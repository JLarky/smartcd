#!/bin/bash
#
# If you would like to install smartcd, run the following command and
# it will download and install itself.
#
#   % curl -L http://smartcd.org/install | bash
#
# If you don't have curl, but you do have wget, try
#
#   % wget --no-check-certificate -O - http://smartcd.org/install | bash
#
# For more details about this program, visit http://github.com/cxreg/smartcd

baseurl="https://raw.github.com/cxreg/smartcd/master"
lwp=$(which lwp-request)
curl=$(which curl)
wget=$(which wget)

# Hopefully this is the right perl, otherwise, I hope you have Crypt::SSLeay installed :)
if [[ -n $curl ]]; then
    download="curl -L"
elif [[ -n $lwp ]] && perl -MCrypt::SSLeay -MLWP::Protocol::https -e '' >/dev/null 2>&1; then
    download="lwp-request"
elif [[ -n $wget ]]; then
    download="wget --no-check-certificate -O -"
else
    echo "I can't find either wget or curl on your system, sorry!  Please download"
    echo "smartcd from http://github.com/cxreg/smartcd and follow the install"
    echo "instructions included."
fi

if [[ -f ~/.smartcd/lib/core/smartcd ]]; then
    smartcd_previously_installed=1
fi

function download_file() {
    local file="$1"

    dots=$(printf "%*s" $((40 - ${#file})))
    echo -n "Downloading $file${dots// /.}"
    $download "$baseurl/$file" > ~/.smartcd/$file 2>/dev/null
    echo "done"
}

working_dir=$(mktemp -d /tmp/smartcd-install.XXXXXX)
cd $working_dir
mkdir -p ~/.smartcd/lib/core
for file in                            \
    lib/core/smartcd                   \
    lib/core/smartcd_edit              \
    lib/core/smartcd_export            \
    lib/core/smartcd_template          \
    lib/core/smartcd_upgrade_database  \
    lib/core/varstash                  \
    lib/core/arrays                    \
    lib/core/completion
do
    download_file "$file"
done

echo "Installation complete"
echo -n "Configure now? [Y/n] "
read setup < /dev/tty
setup=$(echo $setup | tr 'A-Z' 'a-z')
: ${setup:=y}
if [[ $setup =~ "y" ]]; then
    source ~/.smartcd/lib/core/smartcd
    smartcd config
else
    echo "Run \"smartcd config\" to configure when you are ready."
fi

cd ~
rm -rf $working_dir

echo "Congratulations, you have installed smartcd!"

if [[ -z $smartcd_previously_installed ]]; then
    echo "*********************************************************************"
    echo "IMPORTANT NOTE: If you just installed smartcd for the first time and"
    echo "you haven't created a new shell, it may not be loaded yet.  Run"
    echo
    echo "    source ~/.smartcd_config"
    echo "*********************************************************************"
    echo
    echo "To get started, create a few scripts.  Its easy!  Try this:"
    echo
    echo "    echo 'echo hello there from \$(pwd)' | smartcd edit enter"
    echo "    echo 'echo goodbye from \$(pwd)' | smartcd edit leave"
    echo
    echo "Then simply leave the directory and come back.  For a more practical"
    echo "example, how about tweaking your PATH?"
    echo
    echo "    echo \"autostash PATH=\$(pwd)/bin:\\\$PATH\" | smartcd edit enter"
    echo
    echo "(side note: the quoting rules when editing in this fashion can be a bit"
    echo "awkward, so feel free to run \`smartcd edit\` interactively too!"
    echo
    echo "When you enter the directory, your \$PATH will be updated and when you"
    echo "leave it is restored to its previous value automagically.  How cool is"
    echo "that?  For more detail on what is possible, read the documentation in"
    echo "~/.smartcd/lib/core/smartcd or refer to the README at"
    echo "https://github.com/cxreg/smartcd"
fi
